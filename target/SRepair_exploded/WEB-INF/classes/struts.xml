<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>
    <!--这一个配置项的意义正如其名，development Mode，开发者模式，此模式下每次你改动此文件的配置信息时，都不用再重启-->
    <constant name="struts.devMode" value="true" />
    <!--是否允许动态调用，true是既允许动态调用，又允许通配符-->
    <constant name="struts.enable.DynamicMethodInvocation" value="true"/>
    <!--处理中文参数报错的问题-->
    <constant name="struts.i18n.encoding" value="UTF-8" />


    <!-- idea注释的用法：ctrl + shift + / 是块注释，即只有两个注释符号，ctrl + / 是行注释，每一行都会有一个注释符号， 取消注释只能用相同的符号 -->
    <package name="user" namespace="/user" extends="struts-default">
        <action name="register" class="top.xiaohang456.srepair.action.RegisterAction"></action>

        <action name="checkAccount" class="top.xiaohang456.srepair.action.CheckAccountAction"></action>

        <action name="login" class="top.xiaohang456.srepair.action.LoginAction"></action>

        <action name="changePassword" class="top.xiaohang456.srepair.action.ChangePasswordAction"></action>

        <action name="setQuestion" class="top.xiaohang456.srepair.action.SetQuestionAction"></action>

        <action name="checkAnswer" class="top.xiaohang456.srepair.action.CheckAnswerAction"></action>

    </package>

    <package name="admin" namespace="/admin" extends="struts-default">
        <action name="changePassword" class="top.xiaohang456.srepair.action.AdminAction" method="changePassword"></action>

        <action name="checkAnswer" class="top.xiaohang456.srepair.action.AdminAction" method="checkAnswer"></action>

        <action name="changeQuestion" class="top.xiaohang456.srepair.action.AdminAction" method="changeQuestion"></action>
    </package>

    <package name="orders" namespace="/orders" extends="struts-default">

        <action name="create" class="top.xiaohang456.srepair.action.CreateAction" ></action>

        <action name="loadOrders" class="top.xiaohang456.srepair.action.LoadOrdersAction" method="loadOrders"></action>

        <action name="user_loadOrders" class="top.xiaohang456.srepair.action.LoadOrdersAction" method="user_loadOrders"></action>

        <action name="saveStatus" class="top.xiaohang456.srepair.action.SaveStatusAction" ></action>

        <action name="count" class="top.xiaohang456.srepair.action.CountAction" ></action>

    </package>

    <package name="abc" namespace="/" extends="struts-default">
        <action name="aaa" >
            <result name="success">
                index.jsp
            </result>
        </action>

    </package>




</struts>
<!--使用Domain Model接收参数<a href="user/user!add?user.name=xiaohang&user.age=8">添加用户</a>  直接tm传一个对象过去-->
<!-- <%@taglib uri="/struts-tags" prefix="s" %> 使用struts标签库-->
<!-- <s:property value="#request.r1"/> jsp页面用struts标签取的Action里的内容 -->
<!-- <%=request.getAttribute("r1") %> <br /> jsp界面使用jsp语法获取前端实现requestAware接口的类里边所定义的Request属性里的内容 -->

<!-- 一个变淡多个提交按钮的设置
<input type="button" value="submit1" onclick="javascript:document.f.action='login/login1';document.f.submit();" />
<input type="button" value="submit2" onclick="javascript:document.f.action='login/login2';document.f.submit();" />-->

<!-- <result>${r}</result><a href="user/user?type=1"> 动态结果集的构建 -->
<!--   	<result type="redirect">/user_success.jsp?t=${type}</result> <s:property value="t"/>  带有参数的result，已经前端界面对参数的说获取-->
<!-- <include file="/com/bjsxt/struts2/ognl/ognl.xml"/> 引用其他地方的struts配置，实现struts.xml的复用 -->
